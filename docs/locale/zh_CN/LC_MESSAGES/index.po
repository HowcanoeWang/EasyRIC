# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Haozhou Wang
# This file is distributed under the same license as the EasyIDP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: EasyIDP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-24 20:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../index.rst:239
msgid "Getting started"
msgstr "快速上手"

#: ../../index.rst:246
msgid "Backgrounds"
msgstr "背景知识"

#: ../../index.rst:237 ../../index.rst:255
msgid "Examples"
msgstr "举些栗子"

#: ../../index.rst:261
msgid "Python API"
msgstr ""

#: ../../index.rst:276
msgid "Development"
msgstr "项目开发"

#: ../../index.rst:8
msgid "Welcome to EasyIDP's documentation!"
msgstr "欢迎查阅EasyIDP官方文档"

#: ../../index.rst:-1
msgid "header_v2.0.png"
msgstr ""

#: ../../index.rst:13
msgid ""
"EasyIDP (Easy Intermediate Data Processor) is a handy tool for dealing "
"with region of interest (ROI) on the image reconstruction (Metashape & "
"Pix4D) outputs, mainly in agriculture applications. It provides the "
"following functions:"
msgstr "EasyIDP(中间数据处理助手)是一个处理三维重建(Metashape和Pix4D)产品上兴趣区域(ROI)的软件包(主要是农业应用)，提供如下的功能："

#: ../../index.rst:15
msgid "Backward Projection ROI to original images."
msgstr "把ROI逆投影回原始图片上"

#: ../../index.rst:16
msgid "Clip ROI on GeoTiff Maps (DOM & DSM) and Point Cloud."
msgstr "在正射地图(DOM)、高程图(DSM)和点云上把ROI切出来"

#: ../../index.rst:17
msgid "Save cropped results to corresponding files"
msgstr "把切块后的结果保存为对应文件格式"

#: ../../index.rst:-1
msgid "GitHub code size in bytes"
msgstr ""

#: ../../index.rst:-1
msgid "GitHub"
msgstr ""

#: ../../index.rst:-1
msgid "GitHub top language"
msgstr ""

#: ../../index.rst:-1
msgid "GitHub Downloads"
msgstr ""

#: ../../index.rst:-1
msgid "Pypi downloads"
msgstr ""

#: ../../index.rst:38
msgid "other languages"
msgstr "其他语言"

#: ../../index.rst:40
msgid ""
"This is a multi-language document, you can change document languages here"
" or at the bottom left corner."
msgstr "这是一个多语言文档，你可以通过这里或左下角切换语言"

#: ../../index.rst:45
msgid "`English <https://easyidp.readthedocs.io/en/latest/>`_"
msgstr ""

#: ../../index.rst:46
msgid "`中文 <https://easyidp.readthedocs.io/zh_CN/latest/>`_"
msgstr ""

#: ../../index.rst:47
msgid "`日本語(翻訳募集) <https://easyidp.readthedocs.io/ja/latest/>`_"
msgstr ""

#: ../../index.rst:53
msgid ""
"In the EasyIDP, we use the (horizontal, vertical, dim) order as the "
"coords order. When it applies to the GIS coordintes, is (longitude, "
"latitude, altitude)"
msgstr "EasyIDP中使用(水平轴, 垂直轴, 维度/深度)顺序作为坐标顺序。当坐标为地理信息坐标时，对应(经度，纬度，海拔/高度)。"

#: ../../index.rst:57
msgid "Quick Start"
msgstr "快速开始"

#: ../../index.rst:60
msgid "You can install the packages by PyPi:"
msgstr "可以通过PyPi来安装："

#: ../../index.rst:67
msgid "And import the packages in your python code:"
msgstr "然后在你的python环境中导入包："

#: ../../index.rst:76
msgid ""
"Before doing the following example, please understand the basic pipeline "
"for image 3D reconstruction by Pix4D or Metashape. And know how to export"
" the DOM, DSM (\\*.tiff), and Point cloud (\\*.ply). Also require some "
"basic knowledge about GIS shapefile format (\\*.shp)."
msgstr "在执行下面的示例代码前，请确保基本理解了Metashape或Pix4D的图像三维重建的工作流程，并且知道如何导出地图(DOM和DSM的tiff文件格式)和点云(ply文件格式)。并且知道一些基本的GIS矢量文件(shp)的格式与制作方法。"

#: ../../index.rst:81
msgid "1. Read ROI"
msgstr "1. 读取ROI"

#: ../../index.rst:92
msgid ""
"The 2D roi can be used to crop the DOM, DSM, and point cloud ( `2. Crop "
"by ROI`_ ). While the 3D roi can be used for Backward projection ( `4. "
"Backward Projection`_ )"
msgstr "二维的ROI可以用来切正射地图、高程图和点云(参考 `2. 切ROI`_ )。三维点ROI可以用来逆投影回原始图片上(参考 `4. 逆投影`_ )。"

#: ../../index.rst:97
msgid "2. Crop by ROI"
msgstr "2. 切ROI"

#: ../../index.rst:99
msgid "Read the DOM and DSM Geotiff Maps"
msgstr "读取正射地图和高程图文件"

#: ../../index.rst:106
msgid "Read point cloud data"
msgstr "读取点云文件"

#: ../../index.rst:113
msgid "crop the region of interest from ROI:"
msgstr "把兴趣区域(ROI)切出来："

#: ../../index.rst:121
msgid "If you want to save these crops to given folder:"
msgstr "如果你想在切的时候，顺便保存切块的结果："

#: ../../index.rst:131
msgid "3. Read Reconstruction projects"
msgstr "3. 读取重建项目"

#: ../../index.rst:133
msgid "You can add the reconstructed plot individually or by batch adding"
msgstr "可以单独添加一块重建的样地或者使用批处理添加。"

#: ../../index.rst:136
msgid "Add one reconstructed plot"
msgstr "添加一块重建样地"

#: ../../index.rst:140
msgid ""
"The Metashape projects naturally support using different chunks for "
"different plots in one project file (\\*.psx), so the ``chunk_id`` is "
"required to specify which plot are processing."
msgstr "Metashape项目本身支持使用不同的块(chunk)来实现在一个项目中(\\*.psx)创建不同的重建样地，所以需要使用 ``chunk_id`` 来指定处理哪一个样地。"

#: ../../index.rst:148
msgid ""
"Though only the ``xxxx.psx`` is given here, the folder ``xxxx.files`` "
"generated by Metashape is more important for EasyIDP. Please put them "
"into the same directory."
msgstr "尽管这边只给了 ``xxxx.psx`` 项目文件参数，但其实Metashape自动生成的 ``xxxx.files`` 同名文件夹更加重要。请把他们两个放在同一个路径下。"

#: ../../index.rst:162
msgid ""
"Currently, the EasyIDP has not support parse the meta info that records "
"the relative path to the raw image folder, so please manual specify the "
"``raw_img_folder`` if you need the backward projection."
msgstr "目前，EasyIDP尚不支持从元信息中获取原始图片的文件夹路径，所以如果需要进行逆投影，请手动指定 "
"``raw_img_folder`` 原始图片文件夹的路径"

#: ../../index.rst:164
msgid ""
"Though only the ``xxxx.p4d`` is given here, the folder ``xxxx`` generated"
" by Pix4D is more important for EasyIDP. Please put them into the same "
"directory and not recommend the change the inner folder structure"
msgstr "尽管这边只给了  ``xxxx.p4d`` 项目文件参数，但其实Pix4D自动生成的  ``xxxx`` 同名文件夹更重要。请把他们两个放在同一个路径下，并且不推荐调整该文件夹内部的文件。"

#: ../../index.rst:169
msgid "Batch pool for multi-plots"
msgstr "多样地批处理池工具"

#: ../../index.rst:172
msgid "待处理"
msgstr ""

#: ../../index.rst:174
msgid "This feather has not supported yet."
msgstr "该特性尚未支持"

#: ../../index.rst:177
msgid ""
"Add the reconstruction projects to processing pools (different flight "
"time for the same field):"
msgstr "把(同一块地的不同拍摄时间的时间序列)重建项目添加到处理池中："

#: ../../index.rst:186
msgid "Then you can specify each chunk by:"
msgstr "然后你可以按照下面两种方法获取每一个时间点："

#: ../../index.rst:196
msgid "4. Backward Projection"
msgstr "4. 逆投影"

#: ../../index.rst:203
msgid "Then check the results:"
msgstr "然后检查运算结果："

#: ../../index.rst:220
msgid "Save backward projected images"
msgstr "保存反投影的图片结果："

#: ../../index.rst:291
msgid "References"
msgstr "参考资料"

#: ../../index.rst:294
msgid "Publication"
msgstr "发表论文"

#: ../../index.rst:296
msgid "Please cite this paper if this project helps you:"
msgstr "如果您的研究受益于该项目，请引用我们的论文："

#: ../../index.rst:314
msgid "Site packages"
msgstr "第三方库"

#: ../../index.rst:316
msgid "We also thanks the benefits from the following open source projects:"
msgstr "我们也感谢下面所有开源工程对本项目的贡献："

#: ../../index.rst:318
msgid "package main (**for users**)"
msgstr "核心库(**面向用户**)"

#: ../../index.rst:320
msgid "numpy: `https://numpy.org/ <https://numpy.org/>`_"
msgstr ""

#: ../../index.rst:321
msgid "matplotlib: `https://matplotlib.org/ <https://matplotlib.org/>`_"
msgstr ""

#: ../../index.rst:322
msgid ""
"pillow: `https://github.com/python-pillow/Pillow <https://github.com"
"/python-pillow/Pillow>`_"
msgstr ""

#: ../../index.rst:323
msgid ""
"pyproj: `https://github.com/pyproj4/pyproj "
"<https://github.com/pyproj4/pyproj>`_"
msgstr ""

#: ../../index.rst:324
msgid ""
"tifffile: `https://github.com/cgohlke/tifffile "
"<https://github.com/cgohlke/tifffile>`_"
msgstr ""

#: ../../index.rst:325
msgid ""
"imagecodecs: `https://github.com/cgohlke/imagecodecs "
"<https://github.com/cgohlke/imagecodecs>`_"
msgstr ""

#: ../../index.rst:326
msgid ""
"shapely: `https://github.com/shapely/shapely "
"<https://github.com/shapely/shapely>`_"
msgstr ""

#: ../../index.rst:327
msgid ""
"laspy/lasrs/lasio: `https://github.com/laspy/laspy "
"<https://github.com/laspy/laspy>`_"
msgstr ""

#: ../../index.rst:328
msgid ""
"plyfile: `https://github.com/dranjan/python-plyfile "
"<https://github.com/dranjan/python-plyfile>`_"
msgstr ""

#: ../../index.rst:329
msgid ""
"pyshp: `https://github.com/GeospatialPython/pyshp "
"<https://github.com/GeospatialPython/pyshp>`_"
msgstr ""

#: ../../index.rst:330
msgid ""
"tabulate: `https://github.com/astanin/python-tabulate "
"<https://github.com/astanin/python-tabulate>`_"
msgstr ""

#: ../../index.rst:331
msgid "tqdm: `https://github.com/tqdm/tqdm <https://github.com/tqdm/tqdm>`_"
msgstr ""

#: ../../index.rst:332
msgid ""
"gdown: `https://github.com/wkentaro/gdown "
"<https://github.com/wkentaro/gdown>`_"
msgstr ""

#: ../../index.rst:334
msgid "package documentation (**for developers**)"
msgstr "文档工具(**面向开发者**)"

#: ../../index.rst:336
msgid ""
"sphinx: `https://github.com/sphinx-doc/sphinx <https://github.com/sphinx-"
"doc/sphinx>`_"
msgstr ""

#: ../../index.rst:337
msgid ""
"nbsphinx: `https://github.com/spatialaudio/nbsphinx "
"<https://github.com/spatialaudio/nbsphinx>`_"
msgstr ""

#: ../../index.rst:338
msgid ""
"sphinx-gallery: `https://github.com/sphinx-gallery/sphinx-gallery "
"<https://github.com/sphinx-gallery/sphinx-gallery>`_"
msgstr ""

#: ../../index.rst:339
msgid ""
"sphinx-inline-tabs: `https://github.com/pradyunsg/sphinx-inline-tabs "
"<https://github.com/pradyunsg/sphinx-inline-tabs>`_"
msgstr ""

#: ../../index.rst:340
msgid ""
"sphinx-intl: `https://github.com/sphinx-doc/sphinx-intl "
"<https://github.com/sphinx-doc/sphinx-intl>`_"
msgstr ""

#: ../../index.rst:341
msgid ""
"sphinx-rtc-theme: `https://github.com/readthedocs/sphinx_rtd_theme "
"<https://github.com/readthedocs/sphinx_rtd_theme>`_"
msgstr ""

#: ../../index.rst:342
msgid ""
"furo: `https://github.com/pradyunsg/furo "
"<https://github.com/pradyunsg/furo>`_"
msgstr ""

#: ../../index.rst:344
msgid "package testing and releasing (**for developers**)"
msgstr "测试与发布工具(**面向开发者**)"

#: ../../index.rst:346
msgid ""
"pytest: `https://github.com/pytest-dev/pytest <https://github.com/pytest-"
"dev/pytest>`_"
msgstr ""

#: ../../index.rst:347
msgid ""
"packaging: `https://github.com/pypa/packaging "
"<https://github.com/pypa/packaging>`_"
msgstr ""

#: ../../index.rst:348
msgid "wheel: `https://github.com/pypa/wheel <https://github.com/pypa/wheel>`_"
msgstr ""

#: ../../index.rst:351
msgid "Funding"
msgstr "资金来源"

#: ../../index.rst:353
msgid "This project was partially funded by:"
msgstr "该项目的部分资金来自于："

#: ../../index.rst:355
msgid ""
"the JST AIP Acceleration Research “Studies of CPS platform to raise big-"
"data-driven AI agriculture”;"
msgstr ""

#: ../../index.rst:356
msgid "the SICORP Program JPMJSC16H2;"
msgstr ""

#: ../../index.rst:357
msgid "CREST Programs JPMJCR16O2 and JPMJCR16O1;"
msgstr ""

#: ../../index.rst:358
msgid ""
"the International Science & Technology Innovation Program of Chinese "
"Academy of Agricultural Sciences (CAASTIP);"
msgstr ""

#: ../../index.rst:359
msgid "the National Natural Science Foundation of China U19A2"
msgstr "国家自然科学基金U19A2061"

